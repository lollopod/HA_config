export default class WebhookRelayClient {
    private readonly key;
    private _socket?;
    private _logger;
    private _key;
    private _secret;
    private _buckets;
    private _api;
    private _handler;
    private _connecting;
    private _manualDisconnect;
    private _connected;
    private _reconnectInterval;
    private _missingPingThreshold;
    private _countdownTimeout;
    /** @private */
    constructor(key: string, secret: string, buckets?: string[], handler?: (data: string) => void);
    connect(): Promise<void>;
    respond(responseJSON: any): Promise<void>;
    /**
     * Begins connection timeout timer. Used
     * to identify dead connections when we are missing
     * pings from the server
     */
    protected beginCountdown(): void;
    /**
     * Disconnects client
     */
    disconnect(): void;
    /**
     * Checks whether the client is currently connecting to the server.
     */
    protected readonly isConnecting: boolean;
    /**
     * Checks whether the client is currently connected to the server.
     */
    protected readonly isConnected: boolean;
    private _disconnect;
    private _reconnect;
    private _sendMessage;
    private _receiveMessage;
}
